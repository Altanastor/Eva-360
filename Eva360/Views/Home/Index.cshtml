@model Eva360.ViewModel.Home.IndexViewModel

@{
    ViewBag.Title = "Inicio";
}

<section class="hero">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">EVA360</h1>
            <h2 class="subtitle">Bienvenido al sistema de Gestión de Proyectos EVA 360</h2>
        </div>
    </div>
</section>

<div id="usuarios-vue">
    <div class="columns">
        <div class="column">
            <h2 class="title is-3">Lista de Usuarios</h2>
        </div>
        <div class="column">
            <button class="button is-success is-pulled-right" @@click="nuevo()">Agregar</button>
        </div>
    </div>
    <div class="columns">
        <div class="column">
            <table class="table">
                <tr>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Codigo</th>
                    <th>Email</th>
                    <th>F. Nac</th>
                    <th>Sexo</th>
                    <th>Nro Doc</th>
                    <th colspan="2">Acciones</th>
                </tr>
                <tr v-for="(usuario, index) in usuarios" key="usuario.UsuarioId">
                    <td>{{ usuario.Nombre }}</td>
                    <td>{{ usuario.Apellido }}</td>
                    <td>{{ usuario.Codigo }}</td>
                    <td>{{ usuario.Email }}</td>
                    <td>{{ parseFormatNetDate(usuario.FechaNacimiento) }}</td>
                    <td>{{ usuario.Sexo }}</td>
                    <td>{{ usuario.NroDocumento }}</td>
                    <td><button class="button is-warning" @@click="editar(usuario)">Editar</button></td>
                    <td><button class="button is-danger">Eliminar</button></td>
                </tr>
            </table>
        </div>
    </div>
</div>

<script type="text/x-template" id="crud-usuario">
    <div>
        <button id="right-close" class="delete is-danger is-medium is-pulled-right" @@click="$emit('close')"></button>
        <h1 class="title">{{ datos.titulo }}</h1>
        <form id="rightbar-form" class="form">
            <div class="field is-narrow">
                <label class="label">Nombre</label>
                <p class="control is-expanded">
                    <input name="Nombre" class="input" type="text" v-model="datos.usuario.Nombre">
                </p>
            </div>
            <div class="field is-narrow">
                <label class="label">Apellido</label>
                <p class="control is-expanded">
                    <input name="Apellido" class="input" type="text" v-model="datos.usuario.Apellido">
                </p>
            </div>
            <div class="field is-narrow">
                <label class="label">Email</label>
                <p class="control is-expanded">
                    <input name="Email" class="input" type="email" v-model="datos.usuario.Email">
                </p>
            </div>
            <div class="field is-narrow">
                <label class="label">Fecha de Nacimiento</label>
                <p class="control is-expanded">
                    <input name="FechaNacimiento" class="input" type="date" v-model="datos.usuario.FechaNacimiento">
                </p>
            </div>
            <div class="field is-narrow">
                <label class="label">Sexo</label>
                <p class="control is-expanded">
                    <select name="Sexo" class="input" v-model="datos.usuario.Sexo">
                        <option value="M">Hombre</option>
                        <option value="F">Mujer</option>
                    </select>
                </p>
            </div>
            <div class="field is-narrow">
                <label class="label">Número de Documento</label>
                <p class="control is-expanded">
                    <input name="NroDocumento" class="input" type="text" v-model="datos.usuario.NroDocumento">
                </p>
            </div>
            <div class='field'>
                <div class='control'>
                    <a class="button is-primary" @@click="actualizar()">
                        <span class="icon"><i class="fa fa-plus"></i></span>
                        <span class="submit-text">Guardar</span>
                    </a>
                </div>
            </div>
        </form>
    </div>
</script>

@section scripts{
    <script>      
        var app = new Vue({
            el: "#usuarios-vue",
            data: {
                usuarios: []
            },
            created: function() {
                this.fetchData();
            },
            methods: {
                fetchData: function() {
                    var vm = this;
                    axios.get('/Usuario/ListarUsuario')
                      .then(function (response) {
                          vm.usuarios = response.data.usuarios;
                      })
                      .catch(function (error) {
                          console.log(error);
                      });
                },
                nuevo: function() {
                    rightbar.datos = {
                        titulo: "Agregar Usuario",
                        usuario: {
                            Nombre: '',
                            Apellido: '',
                            Codigo: '',
                            Email: '',
                            FechaNacimiento: moment().add(-20, 'years').format("YYYY-MM-DD"),
                            Sexo: 'M',
                            NroDocumento: ''
                        }
                    };
                    rightbar.mostrar();
                    rightbar.componente_activo = "crud-usuario";
                },
                editar: function(usuario) {
                    var usuario_clone = _.clone(usuario);
                    usuario_clone.FechaNacimiento = this.parseNetDate(usuario.FechaNacimiento);
                    rightbar.datos = {
                        titulo: "Editar Usuario",
                        usuario: usuario_clone
                    };
                    rightbar.mostrar();
                    rightbar.componente_activo = "crud-usuario";
                },
                eliminar: function(usuario) {

                },
                parseNetDate: function (date) {
                    var timestamp = date.replace(NETDATE_REGEX, "$1");
                    return moment(parseInt(timestamp)).format("YYYY-MM-DD");
                },
                parseFormatNetDate: function (date) {
                    var timestamp = date.replace(NETDATE_REGEX, "$1");
                    return moment(parseInt(timestamp)).format("DD-MM-YYYY");
                }
            }
        });

        window.rightbar = new Vue({
            el: "#rightbar-vue",
            data: {
                datos: {},
                mensaje: "Mensaje del Rightbar",
                componente_activo: "componente-vacio"
            },
            methods: {
                actualizar: function() {
                    if (datos.usuario.UsuarioId) { // Editar
                        var $form = $('#rightbar-form');
                        var datos_serializados = $form.serialize();

                        axios.post('/Usuario/editar', {
                            params: datos_serializados
                        })
                        .then(function(response) {
                            console.log(response);   
                        })
                        .catch(function(error) {
                            console.log(error);
                        });
                    }
                    else { // Crear
                        var $form = $('#rightbar-form');
                        var datos_serializados = $form.serialize();

                        axios.post('/Usuario/crear', {
                            params: datos_serializados
                        })
                        .then(function(response) {
                            console.log(response);   
                        })
                        .catch(function(error) {
                            console.log(error);
                        });
                    }
                }
            },
            components: {
                'componente-vacio': {template: '<div></div>'},
                'crud-usuario': {
                    props: ['datos', 'titulo'],
                    template: '#crud-usuario'
                }
            }
        });

    </script>
}